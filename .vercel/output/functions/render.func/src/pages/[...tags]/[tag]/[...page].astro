---
import { SITE, BLOG } from '~/config.mjs'

import Layout from '~/layouts/BlogLayout.astro'
import BlogList from '~/components/blog/List.astro'
import Pagination from '~/components/atoms/Pagination.astro'

import { fetchPosts } from '~/utils/posts'
import { getCanonical, getPermalink, cleanSlug, TAG_BASE } from '~/utils/permalinks'

export async function getStaticPaths({ paginate }) {
	if (BLOG?.disabled || BLOG?.tag?.disabled) return []

	const posts = await fetchPosts()

	const tags = new Set()
	posts.map((post) => {
		Array.isArray(post.tags) && post.tags.map((tag) => tags.add(tag.toLowerCase()))
	})

	return Array.from(tags).map((tag) =>
		paginate(
			posts.filter((post) => Array.isArray(post.tags) && post.tags.includes(tag)),
			{
				params: { tag: cleanSlug(tag), tags: TAG_BASE || undefined },
				pageSize: BLOG.postsPerPage,
				props: { tag },
			}
		)
	)
}

const { page, tag } = Astro.props

const currentPage = page.currentPage ?? 1

const meta = {
	title: `Tag: '${tag}' ${currentPage > 1 ? `— Page ${currentPage} ` : ''}— ${SITE.name}`,
	description: SITE.description,
	canonical: getCanonical(getPermalink(page.url.current)),
	ogType: 'Tag',
	noindex: true,
}
---

<Layout meta={meta}>
	<Fragment slot="title">
		<span class="font-display lg:text-6xl text-2xl text-center uppercase tracking-tight text-oranged"
			>{meta.ogType}: {tag}
		</span>
	</Fragment>
	<BlogList posts={page.data} />
	<Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
</Layout>
